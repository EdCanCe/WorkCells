@startuml CU018 - Líder registra respuesta hacia ausencia de colaborador - Diagrama de secuencia
actor Navegador
boundary "absence.routes" as Routes
boundary "absence.view" as View
control "absence.controller" as Controller
entity "absence.model" as Model
database "MySQL" as DB

autonumber

' El Navegador envía la petición AJAX para registrar la respuesta a la ausencia
activate Navegador
Navegador ->> Routes: POST /absence/approve/:id

activate Routes
Routes -> Controller: postRequests(request, response)
deactivate Routes
activate Controller

' El controlador invoca al modelo para actualizar la respuesta de la ausencia
Controller ->> Model: updateStatusLeader(absenceId, status)
activate Model

' El modelo ejecuta la consulta en la base de datos
Model ->> DB: db.execute(\"UPDATE absence \nSET leaderStatus = ? \nWHERE absenceID = ?", \n[status, absenceId]);
activate DB
DB -->> Model: rows
deactivate DB

Model -->> Controller: rows
deactivate Model

' El controlador procesa el resultado y prepara la respuesta para la vista (AJAX JSON o fragmento HTML)
Controller -->> Navegador: rows
deactivate Controller


' El Navegador procesa la respuesta y actualiza la interfaz
Navegador -> Navegador: loadPage()

@enduml