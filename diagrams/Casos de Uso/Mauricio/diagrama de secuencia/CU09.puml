@startuml CU09 - Cambio de contraseña temporal - Diagrama de secuencia

actor Navegador
boundary "myprofile.routes" as Routes
boundary "myprofile.view" as View
control "myprofile.controller" as Controller
entity "user.model" as Model
database "myPhpAdmin" as DB

autonumber

' El navegador envía una solicitud POST para cambiar la contraseña
activate Navegador
Navegador -> Routes : POST /change-password
deactivate Navegador

' La ruta redirige a la vista del formulario
activate Routes
Routes -> View : renderChangePasswordForm()
deactivate Routes

' El usuario interactúa con la vista: ingresa la nueva contraseña
activate View
View -> Controller : submitNewPassword(newPassword, userID)
deactivate View

' El controlador valida la contraseña en el servidor
activate Controller
Controller -> Controller : validatePassword(newPassword)
alt La contraseña no es segura
    Controller -> View : renderChangePasswordForm(error="Contraseña no segura")
else La contraseña es segura
    ' Se aplica el hash internamente antes de actualizar la contraseña en la base de datos.
    Controller -> Model : updatePassword(newPassword, userID)
    activate Model
    Model -> DB : db.execute("UPDATE user\nSET passwd = ? ,\npasswdFlag = false\nWHERE userID = ?",\n[newPassword, userID])
    deactivate Model
    activate DB
    DB -> Controller : renderSuccess(\nmessage="Contraseña actualizada\n")
    deactivate DB
    deactivate Model
    Controller -> View : renderSuccess(\nmessage="Contraseña actualizada")
    deactivate Controller
    activate View
end

' La vista renderiza el resultado y lo devuelve al navegador
View -> Navegador : redirect(home)
deactivate View
activate Navegador

@enduml