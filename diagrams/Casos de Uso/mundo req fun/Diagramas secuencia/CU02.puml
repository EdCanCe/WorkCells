@startuml
actor Usuario
boundary "calendar.routes" as Routes
boundary "calendar.ejs" as Ejs
control "calendar.controller" as Controller
entity "holiday.model" as Holiday
entity "absence.model" as Absence
entity "vacation.model" as Vacation
entity "oneToOne.model" as OneToOne
database "mysql" as MySQL

autonumber

activate Usuario
Usuario -> Routes: GET /calendar
deactivate Usuario

activate Routes
Routes -> Controller: getRoot(request, response)
deactivate Routes

activate Controller
Controller -> Ejs: response.render("calendar,ejs", {...})
deactivate Controller

activate Ejs
Ejs -> Usuario: HTML
deactivate Ejs
activate Usuario

Usuario -> Usuario: fetchByDate(currentDate.content)

Usuario ->> Routes: GET /calendar/:date
activate Routes

Routes -> Controller: getFetch(request, response)
deactivate Routes

activate Controller
Controller ->> Holiday: fetchByDateType(startDate, endDate)
activate Holiday
Holiday ->> MySQL: execute(...)
activate MySQL
MySQL -->> Holiday: rows
deactivate MySQL
Holiday -->> Controller: rows
deactivate Holiday

Controller ->> Absence: fetchByDateType(startDate, endDate, request.session.userID)
activate Absence
Absence ->> MySQL: execute(...)
activate MySQL
MySQL -->> Absence: rows
deactivate MySQL
Absence -->> Controller: rows
deactivate Absence

Controller ->> Vacation: fetchByDateType(startDate, endDate, request.session.userID)
activate Vacation
Vacation ->> MySQL: execute(...)
activate MySQL
MySQL -->> Vacation: rows
deactivate MySQL
Vacation -->> Controller: rows
deactivate Vacation

alt request.role == "Manager"
    Controller ->> OneToOne: fetchByDateType(startDate, endDate, request.session.userID)
    activate OneToOne
    OneToOne ->> MySQL: execute(...)
    activate MySQL
    MySQL -->> OneToOne: rows
    deactivate MySQL
    OneToOne -->> Controller: rows
    deactivate OneToOne
else
    Controller ->> OneToOne: fetchByDateTypeHR(startDate, endDate, request.session.userID)
    activate OneToOne
    OneToOne ->> MySQL: execute(...)
    activate MySQL
    MySQL -->> OneToOne: rows
    deactivate MySQL
    OneToOne -->> Controller: rows
    deactivate OneToOne
end


alt promesa_exitosa
    Controller -->> Usuario: result.json()
    Usuario -> Usuario: .then(data)
else excepciÃ³n

Controller -->> Usuario: status(500)
deactivate Controller
Usuario -> Usuario: console.log(err)

end

deactivate Usuario

@enduml