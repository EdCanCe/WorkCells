@startuml
actor Navegador
boundary "oneToOne.routes" as Routes
boundary "error.routes" as Error
boundary "oneToOneForm.ejs" as Ejs
control "oneToOne.controller" as Controller
entity "answer" as Answer
entity "measure" as Measure
entity "oneToOne.model" as Model
entity "question.model" as Question
entity "measurable.model" as Measurable
database "mysql" as MySQL

autonumber

activate Navegador
Navegador -> Routes  : GET /oneToOne/:sessionID/fill
deactivate Navegador

activate Routes 
Routes  -> Controller : getFill(request, response)
deactivate Routes 

activate Controller

Controller ->> Model : fetchSessionData(request.params.sessionID)
activate Model
Model ->> MySQL : execute(...)
activate MySQL
MySQL -->> Model : rows
deactivate MySQL
Model -->> Controller : rows
deactivate Model

alt rows.length == 0
    Controller -> Error : response.redirect("/error")
end

Controller ->> Question : fetchAll()
activate Question
Question ->> MySQL : execute(...)
activate MySQL
MySQL -->> Question : questions
deactivate MySQL
Question -->> Controller : questions
deactivate Question

Controller ->> Measurable : fetchAll()
activate Measurable
Measurable ->> MySQL : execute(...)
activate MySQL
MySQL -->> Measurable : measusables
deactivate MySQL
Measurable -->> Controller : measusables
deactivate Measurable


Controller -> Ejs : response.render('oneToOneFill.ejs', {...})
deactivate Controller

activate Ejs
Ejs -> Navegador : HTML
deactivate Ejs

activate Navegador
Navegador -> Routes  : POST /oneToOne/:sessionID/fill
deactivate Navegador

activate Routes 
Routes  -> Controller : postFill(request, response)
deactivate Routes 

activate Controller

Controller ->> Model : fetchSessionData(request.params.sessionID)
activate Model
Model ->> MySQL : execute(...)
activate MySQL
MySQL -->> Model : rows
deactivate MySQL
Model -->> Controller : rows
deactivate Model

loop Para cada pregunta
    create Answer
    Controller -> Answer : new Answer(...)
    activate Answer
    Controller ->> Answer : save()
    Answer ->> MySQL : execute(...)
    activate MySQL
    MySQL -->> Answer : Query OK
    deactivate MySQL
    Answer -->> Controller : promesa
    deactivate Answer
end

loop Para cada mÃ©trica
    create Measure
    Controller -> Measure : new Measure(...)
    activate Measure
    Controller ->> Measure : save()
    Measure ->> MySQL : execute(...)
    activate MySQL
    MySQL -->> Measure : Query OK
    deactivate MySQL
    Measure -->> Controller : promesa
    deactivate Measure
end

Controller -> Routes  : response.redirect(`/oneToOne/${request.params.sessionID}`)
deactivate Controller

@enduml