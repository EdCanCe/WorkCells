/*! tailwindcss v4.0.17 | MIT License | https://tailwindcss.com */
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
      "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    --color-red-200: oklch(0.885 0.062 18.334);
    --color-red-500: oklch(0.637 0.237 25.331);
    --color-red-700: oklch(0.505 0.213 27.518);
    --color-red-950: oklch(0.258 0.092 26.042);
    --color-orange-600: oklch(0.646 0.222 41.116);
    --color-yellow-400: oklch(0.852 0.199 91.936);
    --color-yellow-500: oklch(0.795 0.184 86.047);
    --color-yellow-600: oklch(0.681 0.162 75.834);
    --color-yellow-900: oklch(0.421 0.095 57.708);
    --color-yellow-950: oklch(0.286 0.066 53.813);
    --color-green-500: oklch(0.723 0.219 149.579);
    --color-sky-400: oklch(0.746 0.16 232.661);
    --color-sky-600: oklch(0.588 0.158 241.966);
    --color-sky-900: oklch(0.391 0.09 240.876);
    --color-sky-950: oklch(0.293 0.066 243.157);
    --color-blue-500: oklch(0.623 0.214 259.815);
    --color-blue-600: oklch(0.546 0.245 262.881);
    --color-blue-700: oklch(0.488 0.243 264.376);
    --color-purple-500: oklch(0.627 0.265 303.9);
    --color-rose-400: oklch(0.712 0.194 13.428);
    --color-rose-500: oklch(0.645 0.246 16.439);
    --color-rose-900: oklch(0.41 0.159 10.272);
    --color-rose-950: oklch(0.271 0.105 12.094);
    --color-gray-100: oklch(0.967 0.003 264.542);
    --color-gray-200: oklch(0.928 0.006 264.531);
    --color-gray-300: oklch(0.872 0.01 258.338);
    --color-gray-400: oklch(0.707 0.022 261.325);
    --color-gray-600: oklch(0.446 0.03 256.802);
    --color-gray-700: oklch(0.373 0.034 259.733);
    --color-gray-800: oklch(0.278 0.033 256.848);
    --color-neutral-100: oklch(0.97 0 0);
    --color-neutral-200: oklch(0.922 0 0);
    --color-neutral-400: oklch(0.708 0 0);
    --color-neutral-500: oklch(0.556 0 0);
    --color-neutral-600: oklch(0.439 0 0);
    --color-neutral-700: oklch(0.371 0 0);
    --color-neutral-800: oklch(0.269 0 0);
    --color-neutral-950: oklch(0.145 0 0);
    --color-white: #fff;
    --spacing: 0.25rem;
    --breakpoint-xl: 80rem;
    --container-sm: 24rem;
    --container-2xl: 42rem;
    --container-5xl: 64rem;
    --text-xs: 0.75rem;
    --text-xs--line-height: calc(1 / 0.75);
    --text-sm: 0.875rem;
    --text-sm--line-height: calc(1.25 / 0.875);
    --text-base: 1rem;
    --text-base--line-height: calc(1.5 / 1);
    --text-lg: 1.125rem;
    --text-lg--line-height: calc(1.75 / 1.125);
    --text-xl: 1.25rem;
    --text-xl--line-height: calc(1.75 / 1.25);
    --text-2xl: 1.5rem;
    --text-2xl--line-height: calc(2 / 1.5);
    --text-3xl: 1.875rem;
    --text-3xl--line-height: calc(2.25 / 1.875);
    --text-4xl: 2.25rem;
    --text-4xl--line-height: calc(2.5 / 2.25);
    --font-weight-normal: 400;
    --font-weight-medium: 500;
    --font-weight-semibold: 600;
    --font-weight-bold: 700;
    --tracking-wider: 0.05em;
    --radius-md: 0.375rem;
    --radius-lg: 0.5rem;
    --radius-2xl: 1rem;
    --default-transition-duration: 150ms;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: color-mix(in oklab, currentColor 50%, transparent);
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .visible {
    visibility: visible;
  }
  .absolute {
    position: absolute;
  }
  .fixed {
    position: fixed;
  }
  .relative {
    position: relative;
  }
  .static {
    position: static;
  }
  .inset-y-0 {
    inset-block: calc(var(--spacing) * 0);
  }
  .top-8\.5 {
    top: calc(var(--spacing) * 8.5);
  }
  .right-0 {
    right: calc(var(--spacing) * 0);
  }
  .right-2 {
    right: calc(var(--spacing) * 2);
  }
  .right-4 {
    right: calc(var(--spacing) * 4);
  }
  .right-10 {
    right: calc(var(--spacing) * 10);
  }
  .bottom-0 {
    bottom: calc(var(--spacing) * 0);
  }
  .bottom-2 {
    bottom: calc(var(--spacing) * 2);
  }
  .left-0 {
    left: calc(var(--spacing) * 0);
  }
  .left-10 {
    left: calc(var(--spacing) * 10);
  }
  .z-10 {
    z-index: 10;
  }
  .col-span-7 {
    grid-column: span 7 / span 7;
  }
  .col-span-full {
    grid-column: 1 / -1;
  }
  .row-span-1 {
    grid-row: span 1 / span 1;
  }
  .container {
    width: 100%;
    @media (width >= 40rem) {
      max-width: 40rem;
    }
    @media (width >= 48rem) {
      max-width: 48rem;
    }
    @media (width >= 64rem) {
      max-width: 64rem;
    }
    @media (width >= 80rem) {
      max-width: 80rem;
    }
    @media (width >= 96rem) {
      max-width: 96rem;
    }
  }
  .m-0 {
    margin: calc(var(--spacing) * 0);
  }
  .m-2 {
    margin: calc(var(--spacing) * 2);
  }
  .m-\[2px\] {
    margin: 2px;
  }
  .m-auto {
    margin: auto;
  }
  .mx-auto {
    margin-inline: auto;
  }
  .mt-1 {
    margin-top: calc(var(--spacing) * 1);
  }
  .mt-2 {
    margin-top: calc(var(--spacing) * 2);
  }
  .mt-3 {
    margin-top: calc(var(--spacing) * 3);
  }
  .mt-4 {
    margin-top: calc(var(--spacing) * 4);
  }
  .mt-5 {
    margin-top: calc(var(--spacing) * 5);
  }
  .mt-6 {
    margin-top: calc(var(--spacing) * 6);
  }
  .mt-\[-3px\] {
    margin-top: -3px;
  }
  .mr-2 {
    margin-right: calc(var(--spacing) * 2);
  }
  .mr-auto {
    margin-right: auto;
  }
  .\!mb-3 {
    margin-bottom: calc(var(--spacing) * 3) !important;
  }
  .mb-0 {
    margin-bottom: calc(var(--spacing) * 0);
  }
  .mb-1 {
    margin-bottom: calc(var(--spacing) * 1);
  }
  .mb-2 {
    margin-bottom: calc(var(--spacing) * 2);
  }
  .mb-4 {
    margin-bottom: calc(var(--spacing) * 4);
  }
  .mb-6 {
    margin-bottom: calc(var(--spacing) * 6);
  }
  .ml-2 {
    margin-left: calc(var(--spacing) * 2);
  }
  .ml-auto {
    margin-left: auto;
  }
  .\!block {
    display: block !important;
  }
  .\!flex {
    display: flex !important;
  }
  .\!hidden {
    display: none !important;
  }
  .block {
    display: block;
  }
  .flex {
    display: flex;
  }
  .grid {
    display: grid;
  }
  .hidden {
    display: none;
  }
  .inline-block {
    display: inline-block;
  }
  .table {
    display: table;
  }
  .aspect-square {
    aspect-ratio: 1 / 1;
  }
  .size-full {
    width: 100%;
    height: 100%;
  }
  .h-5 {
    height: calc(var(--spacing) * 5);
  }
  .h-6 {
    height: calc(var(--spacing) * 6);
  }
  .h-7 {
    height: calc(var(--spacing) * 7);
  }
  .h-12 {
    height: calc(var(--spacing) * 12);
  }
  .h-40 {
    height: calc(var(--spacing) * 40);
  }
  .h-64 {
    height: calc(var(--spacing) * 64);
  }
  .h-\[38px\] {
    height: 38px;
  }
  .h-\[60px\] {
    height: 60px;
  }
  .h-auto {
    height: auto;
  }
  .h-fit {
    height: fit-content;
  }
  .h-full {
    height: 100%;
  }
  .h-screen {
    height: 100vh;
  }
  .max-h-40 {
    max-height: calc(var(--spacing) * 40);
  }
  .max-h-\[300px\] {
    max-height: 300px;
  }
  .max-h-\[calc\(100vh-60px\)\] {
    max-height: calc(100vh - 60px);
  }
  .max-h-screen {
    max-height: 100vh;
  }
  .min-h-\[60px\] {
    min-height: 60px;
  }
  .min-h-screen {
    min-height: 100vh;
  }
  .\!w-\[98\%\] {
    width: 98% !important;
  }
  .\!w-full {
    width: 100% !important;
  }
  .w-0 {
    width: calc(var(--spacing) * 0);
  }
  .w-1\/2 {
    width: calc(1/2 * 100%);
  }
  .w-1\/5 {
    width: calc(1/5 * 100%);
  }
  .w-2\/4 {
    width: calc(2/4 * 100%);
  }
  .w-3\/4 {
    width: calc(3/4 * 100%);
  }
  .w-4\/5 {
    width: calc(4/5 * 100%);
  }
  .w-5 {
    width: calc(var(--spacing) * 5);
  }
  .w-6 {
    width: calc(var(--spacing) * 6);
  }
  .w-12 {
    width: calc(var(--spacing) * 12);
  }
  .w-20 {
    width: calc(var(--spacing) * 20);
  }
  .w-32 {
    width: calc(var(--spacing) * 32);
  }
  .w-40 {
    width: calc(var(--spacing) * 40);
  }
  .w-48 {
    width: calc(var(--spacing) * 48);
  }
  .w-\[38px\] {
    width: 38px;
  }
  .w-\[90\%\] {
    width: 90%;
  }
  .w-fit {
    width: fit-content;
  }
  .w-full {
    width: 100%;
  }
  .w-screen {
    width: 100vw;
  }
  .max-w-2xl {
    max-width: var(--container-2xl);
  }
  .max-w-5xl {
    max-width: var(--container-5xl);
  }
  .max-w-\[80\%\] {
    max-width: 80%;
  }
  .max-w-full {
    max-width: 100%;
  }
  .max-w-screen-xl {
    max-width: var(--breakpoint-xl);
  }
  .max-w-sm {
    max-width: var(--container-sm);
  }
  .min-w-\[50\%\] {
    min-width: 50%;
  }
  .min-w-full {
    min-width: 100%;
  }
  .flex-1 {
    flex: 1;
  }
  .flex-grow {
    flex-grow: 1;
  }
  .scale-75 {
    --tw-scale-x: 75%;
    --tw-scale-y: 75%;
    --tw-scale-z: 75%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
  }
  .rotate-180 {
    rotate: 180deg;
  }
  .cursor-pointer {
    cursor: pointer;
  }
  .resize {
    resize: both;
  }
  .resize-none {
    resize: none;
  }
  .list-disc {
    list-style-type: disc;
  }
  .auto-rows-fr {
    grid-auto-rows: minmax(0, 1fr);
  }
  .grid-cols-1 {
    grid-template-columns: repeat(1, minmax(0, 1fr));
  }
  .grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }
  .grid-cols-7 {
    grid-template-columns: repeat(7, minmax(0, 1fr));
  }
  .flex-col {
    flex-direction: column;
  }
  .flex-row {
    flex-direction: row;
  }
  .flex-wrap {
    flex-wrap: wrap;
  }
  .place-content-between {
    place-content: space-between;
  }
  .items-center {
    align-items: center;
  }
  .items-end {
    align-items: flex-end;
  }
  .justify-between {
    justify-content: space-between;
  }
  .justify-center {
    justify-content: center;
  }
  .justify-end {
    justify-content: flex-end;
  }
  .justify-start {
    justify-content: flex-start;
  }
  .gap-1 {
    gap: calc(var(--spacing) * 1);
  }
  .gap-2 {
    gap: calc(var(--spacing) * 2);
  }
  .gap-3 {
    gap: calc(var(--spacing) * 3);
  }
  .gap-4 {
    gap: calc(var(--spacing) * 4);
  }
  .gap-5 {
    gap: calc(var(--spacing) * 5);
  }
  .gap-6 {
    gap: calc(var(--spacing) * 6);
  }
  .gap-8 {
    gap: calc(var(--spacing) * 8);
  }
  .space-y-2 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 2) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-5 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 5) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 5) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-6 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 6) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 6) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-8 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 8) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 8) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-x-2 {
    :where(& > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--spacing) * 2) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-x-reverse)));
    }
  }
  .space-x-4 {
    :where(& > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--spacing) * 4) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-x-reverse)));
    }
  }
  .space-x-6 {
    :where(& > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--spacing) * 6) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--spacing) * 6) * calc(1 - var(--tw-space-x-reverse)));
    }
  }
  .\!overflow-hidden {
    overflow: hidden !important;
  }
  .overflow-auto {
    overflow: auto;
  }
  .overflow-hidden {
    overflow: hidden;
  }
  .overflow-x-auto {
    overflow-x: auto;
  }
  .rounded {
    border-radius: 0.25rem;
  }
  .rounded-2xl {
    border-radius: var(--radius-2xl);
  }
  .rounded-full {
    border-radius: calc(infinity * 1px);
  }
  .rounded-lg {
    border-radius: var(--radius-lg);
  }
  .rounded-md {
    border-radius: var(--radius-md);
  }
  .rounded-l-lg {
    border-top-left-radius: var(--radius-lg);
    border-bottom-left-radius: var(--radius-lg);
  }
  .rounded-r-lg {
    border-top-right-radius: var(--radius-lg);
    border-bottom-right-radius: var(--radius-lg);
  }
  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .border-r-4 {
    border-right-style: var(--tw-border-style);
    border-right-width: 4px;
  }
  .border-b-1 {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
  }
  .border-l-4 {
    border-left-style: var(--tw-border-style);
    border-left-width: 4px;
  }
  .border-blue-700 {
    border-color: var(--color-blue-700);
  }
  .border-neutral-600\/50 {
    border-color: color-mix(in oklab, var(--color-neutral-600) 50%, transparent);
  }
  .border-neutral-700 {
    border-color: var(--color-neutral-700);
  }
  .border-neutral-950\/40 {
    border-color: color-mix(in oklab, var(--color-neutral-950) 40%, transparent);
  }
  .border-red-700 {
    border-color: var(--color-red-700);
  }
  .border-white\/30 {
    border-color: color-mix(in oklab, var(--color-white) 30%, transparent);
  }
  .bg-\(--darkColorNavOne\) {
    background-color: var(--darkColorNavOne);
  }
  .bg-\[\#003E6D\] {
    background-color: #003E6D;
  }
  .bg-blue-500 {
    background-color: var(--color-blue-500);
  }
  .bg-gray-200 {
    background-color: var(--color-gray-200);
  }
  .bg-green-500 {
    background-color: var(--color-green-500);
  }
  .bg-neutral-500\/20 {
    background-color: color-mix(in oklab, var(--color-neutral-500) 20%, transparent);
  }
  .bg-neutral-700\/25 {
    background-color: color-mix(in oklab, var(--color-neutral-700) 25%, transparent);
  }
  .bg-neutral-700\/50 {
    background-color: color-mix(in oklab, var(--color-neutral-700) 50%, transparent);
  }
  .bg-neutral-800 {
    background-color: var(--color-neutral-800);
  }
  .bg-neutral-800\/50 {
    background-color: color-mix(in oklab, var(--color-neutral-800) 50%, transparent);
  }
  .bg-neutral-950\/20 {
    background-color: color-mix(in oklab, var(--color-neutral-950) 20%, transparent);
  }
  .bg-purple-500 {
    background-color: var(--color-purple-500);
  }
  .bg-red-500 {
    background-color: var(--color-red-500);
  }
  .object-contain {
    object-fit: contain;
  }
  .object-cover {
    object-fit: cover;
  }
  .\!p-0 {
    padding: calc(var(--spacing) * 0) !important;
  }
  .\!p-3 {
    padding: calc(var(--spacing) * 3) !important;
  }
  .p-0 {
    padding: calc(var(--spacing) * 0);
  }
  .p-1 {
    padding: calc(var(--spacing) * 1);
  }
  .p-2 {
    padding: calc(var(--spacing) * 2);
  }
  .p-3 {
    padding: calc(var(--spacing) * 3);
  }
  .p-4 {
    padding: calc(var(--spacing) * 4);
  }
  .p-6 {
    padding: calc(var(--spacing) * 6);
  }
  .p-10 {
    padding: calc(var(--spacing) * 10);
  }
  .\!px-0 {
    padding-inline: calc(var(--spacing) * 0) !important;
  }
  .px-2 {
    padding-inline: calc(var(--spacing) * 2);
  }
  .px-4 {
    padding-inline: calc(var(--spacing) * 4);
  }
  .py-1 {
    padding-block: calc(var(--spacing) * 1);
  }
  .py-2 {
    padding-block: calc(var(--spacing) * 2);
  }
  .py-8 {
    padding-block: calc(var(--spacing) * 8);
  }
  .\!pt-0 {
    padding-top: calc(var(--spacing) * 0) !important;
  }
  .pt-0 {
    padding-top: calc(var(--spacing) * 0);
  }
  .\!pr-4 {
    padding-right: calc(var(--spacing) * 4) !important;
  }
  .pr-6 {
    padding-right: calc(var(--spacing) * 6);
  }
  .\!pb-0 {
    padding-bottom: calc(var(--spacing) * 0) !important;
  }
  .\!pl-4 {
    padding-left: calc(var(--spacing) * 4) !important;
  }
  .pl-3 {
    padding-left: calc(var(--spacing) * 3);
  }
  .pl-10 {
    padding-left: calc(var(--spacing) * 10);
  }
  .text-center {
    text-align: center;
  }
  .text-right {
    text-align: right;
  }
  .align-middle {
    vertical-align: middle;
  }
  .text-2xl {
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
  }
  .text-4xl {
    font-size: var(--text-4xl);
    line-height: var(--tw-leading, var(--text-4xl--line-height));
  }
  .text-base {
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
  }
  .text-lg {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
  }
  .text-sm {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  .text-xl {
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
  }
  .text-xs {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
  }
  .font-bold {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }
  .font-medium {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }
  .font-semibold {
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
  }
  .whitespace-nowrap {
    white-space: nowrap;
  }
  .text-blue-500 {
    color: var(--color-blue-500);
  }
  .text-blue-600 {
    color: var(--color-blue-600);
  }
  .text-gray-100 {
    color: var(--color-gray-100);
  }
  .text-gray-400 {
    color: var(--color-gray-400);
  }
  .text-gray-800 {
    color: var(--color-gray-800);
  }
  .text-neutral-100 {
    color: var(--color-neutral-100);
  }
  .text-neutral-400 {
    color: var(--color-neutral-400);
  }
  .text-orange-600 {
    color: var(--color-orange-600);
  }
  .text-purple-500 {
    color: var(--color-purple-500);
  }
  .text-white {
    color: var(--color-white);
  }
  .uppercase {
    text-transform: uppercase;
  }
  .opacity-0 {
    opacity: 0%;
  }
  .opacity-30 {
    opacity: 30%;
  }
  .opacity-100 {
    opacity: 100%;
  }
  .shadow {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-lg {
    --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-md {
    --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .invert {
    --tw-invert: invert(100%);
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .filter {
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .transition {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .hover\:bg-\(--darkColorNavOne\)\/50 {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in oklab, var(--darkColorNavOne) 50%, transparent);
      }
    }
  }
  .hover\:bg-gray-300 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-gray-300);
      }
    }
  }
  .hover\:bg-neutral-700 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-neutral-700);
      }
    }
  }
  .hover\:bg-neutral-950\/40 {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in oklab, var(--color-neutral-950) 40%, transparent);
      }
    }
  }
  .hover\:underline {
    &:hover {
      @media (hover: hover) {
        text-decoration-line: underline;
      }
    }
  }
  .focus\:ring-2 {
    &:focus {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentColor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .focus\:ring-blue-500 {
    &:focus {
      --tw-ring-color: var(--color-blue-500);
    }
  }
  .focus\:outline-none {
    &:focus {
      --tw-outline-style: none;
      outline-style: none;
    }
  }
  .sm\:col-span-2 {
    @media (width >= 40rem) {
      grid-column: span 2 / span 2;
    }
  }
  .sm\:grid-cols-2 {
    @media (width >= 40rem) {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }
  .sm\:flex-row {
    @media (width >= 40rem) {
      flex-direction: row;
    }
  }
  .sm\:items-center {
    @media (width >= 40rem) {
      align-items: center;
    }
  }
  .sm\:gap-4 {
    @media (width >= 40rem) {
      gap: calc(var(--spacing) * 4);
    }
  }
  .md\:w-full {
    @media (width >= 48rem) {
      width: 100%;
    }
  }
  .md\:grid-cols-2 {
    @media (width >= 48rem) {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }
  .md\:grid-cols-3 {
    @media (width >= 48rem) {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }
  .dark\:block {
    &:where(.dark, .dark *) {
      display: block;
    }
  }
  .dark\:hidden {
    &:where(.dark, .dark *) {
      display: none;
    }
  }
  .dark\:bg-gray-700 {
    &:where(.dark, .dark *) {
      background-color: var(--color-gray-700);
    }
  }
  .dark\:hover\:bg-gray-600 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-gray-600);
        }
      }
    }
  }
}
@font-face {
  font-family: "Gotham";
  src: url("/fonts/Gotham-Book.otf") format("opentype");
  font-weight: 400;
  font-style: normal;
}
@font-face {
  font-family: "Gotham";
  src: url("/fonts/Gotham-BookItalic.otf") format("opentype");
  font-weight: 400;
  font-style: italic;
}
@font-face {
  font-family: "Gotham";
  src: url("/fonts/Gotham-Medium.otf") format("opentype");
  font-weight: 500;
  font-style: normal;
}
@font-face {
  font-family: "Gotham";
  src: url("/fonts/Gotham-MediumItalic.otf") format("opentype");
  font-weight: 500;
  font-style: italic;
}
@font-face {
  font-family: "Gotham";
  src: url("/fonts/Gotham-Bold.otf") format("opentype");
  font-weight: 600;
  font-style: normal;
}
@font-face {
  font-family: "Gotham";
  src: url("/fonts/Gotham-Black.otf") format("opentype");
  font-weight: 700;
  font-style: normal;
}
* * {
  font-family: "Gotham";
}
.title {
  width: fit-content;
  font-size: var(--text-3xl);
  line-height: var(--tw-leading, var(--text-3xl--line-height));
  --tw-font-weight: var(--font-weight-semibold);
  font-weight: var(--font-weight-semibold);
}
.subtitle {
  font-size: var(--text-2xl);
  line-height: var(--tw-leading, var(--text-2xl--line-height));
  --tw-font-weight: var(--font-weight-semibold);
  font-weight: var(--font-weight-semibold);
}
.bold {
  --tw-font-weight: var(--font-weight-semibold);
  font-weight: var(--font-weight-semibold);
}
:root {
  --lightColorNavBase: #e5e5e5;
  --darkColorNavBase: #171717;
  --lightColorNavOne: #a1a1a1;
  --darkColorNavOne: #404040;
  --lightColorNavTwo: #d4d4d4;
  --darkColorNavTwo: #262626;
  --lightColorBase: #fafafa;
  --darkColorBase: #0a0a0a;
  --lightBtnPrimary: #1072c2;
  --darkBtnPrimary: #1b3f43;
  --lightBtnPrimaryLowOpacity: #1072c266;
  --darkBtnPrimaryLowOpacity: #1b3f4366;
  --lightBtnSuccess: #30e16e;
  --darkBtnSuccess: #029033;
  --lightBtnDanger: #ef325e;
  --darkBtnDanger: #9a0000;
}
* {
  transition: background-color 0.3s, width 0.3s, opacity 0.3s, filter 0.3s;
}
@keyframes statusContainer {
  0% {
    height: 0px;
    margin: 0px 30px;
    padding-top: 0;
  }
  5% {
    height: 53px;
    margin: 30px 30px;
    padding-top: 13px;
  }
  95% {
    height: 53px;
    margin: 30px 30px;
    padding-top: 13px;
  }
  100% {
    height: 0px;
    margin: 0px 30px;
    padding-top: 0;
  }
}
.statusContainerAnimate {
  animation: statusContainer 7s linear forwards;
}
@keyframes statusContainerAnimateHide {
  0% {
    height: 53px;
    margin: 30px 30px;
    padding-top: 13px;
  }
  100% {
    height: 0px;
    margin: 0px 30px;
    padding-top: 0;
  }
}
.statusContainerAnimateHide {
  animation: statusContainerAnimateHide 0.35s linear forwards;
}
@keyframes statusBar {
  0% {
    width: 100%;
  }
  5% {
    width: 100%;
  }
  95% {
    width: 0;
  }
}
.statusBarAnimate {
  animation: statusBar 7s linear forwards;
}
@keyframes glow {
  0% {
    opacity: 100%;
  }
  50% {
    opacity: 30%;
  }
  100% {
    opacity: 100%;
  }
}
.glowing {
  animation: glow 2s infinite;
}
@keyframes showOpacity {
  0% {
    opacity: 100%;
  }
  100% {
    opacity: 100%;
  }
}
.navIcon {
  &:where(.dark, .dark *) {
    --tw-invert: invert(100%);
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
}
.bgNav {
  border-right-style: var(--tw-border-style);
  border-right-width: 1px;
  border-color: var(--lightColorNavOne);
  background-color: var(--lightColorNavBase);
  &:where(.dark, .dark *) {
    border-color: var(--darkColorNavOne);
  }
  &:where(.dark, .dark *) {
    background-color: var(--darkColorNavBase);
  }
}
.bgNavOne {
  &:hover {
    @media (hover: hover) {
      background-color: var(--lightColorNavOne);
    }
  }
  &:where(.dark, .dark *) {
    &:hover {
      @media (hover: hover) {
        background-color: var(--darkColorNavOne);
      }
    }
  }
}
.bgNavTwo {
  border-color: var(--lightColorNavOne);
  background-color: var(--lightColorNavTwo);
  &:where(.dark, .dark *) {
    border-color: var(--darkColorNavOne);
  }
  &:where(.dark, .dark *) {
    background-color: var(--darkColorNavTwo);
  }
}
.bgNavHead {
  &:hover {
    @media (hover: hover) {
      background-color: var(--color-neutral-500);
    }
  }
  &:where(.dark, .dark *) {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-neutral-600);
      }
    }
  }
}
.bgStatusInfo {
  background-color: var(--color-sky-400);
  color: var(--color-sky-900);
  &:where(.dark, .dark *) {
    background-color: var(--color-sky-900);
  }
  &:where(.dark, .dark *) {
    color: var(--color-sky-400);
  }
}
.bgStatusBarInfo {
  background-color: var(--color-sky-600);
  &:where(.dark, .dark *) {
    background-color: var(--color-sky-950);
  }
}
.bgStatusWarning {
  background-color: var(--color-yellow-400);
  color: var(--color-yellow-900);
  &:where(.dark, .dark *) {
    background-color: var(--color-yellow-900);
  }
  &:where(.dark, .dark *) {
    color: var(--color-yellow-400);
  }
}
.bgStatusBarWarning {
  background-color: var(--color-yellow-600);
  &:where(.dark, .dark *) {
    background-color: var(--color-yellow-950);
  }
}
.bgStatusAlert {
  background-color: var(--color-rose-400);
  --tw-font-weight: var(--font-weight-bold);
  font-weight: var(--font-weight-bold);
  color: var(--color-rose-900);
  &:where(.dark, .dark *) {
    background-color: var(--color-rose-900);
  }
  &:where(.dark, .dark *) {
    color: var(--color-rose-400);
  }
}
.bgStatusBarAlert {
  background-color: var(--color-rose-500);
  &:where(.dark, .dark *) {
    background-color: var(--color-rose-950);
  }
}
.bgBase {
  background-color: var(--lightColorBase);
  color: var(--darkColorBase);
  &:where(.dark, .dark *) {
    background-color: var(--darkColorBase);
  }
  &:where(.dark, .dark *) {
    color: var(--lightColorBase);
  }
}
.bgPrimary {
  background-color: var(--lightBtnPrimary);
  &:where(.dark, .dark *) {
    background-color: var(--darkBtnPrimary);
  }
}
.bgPrimaryLowOpacity {
  background-color: var(--lightBtnPrimaryLowOpacity);
  &:where(.dark, .dark *) {
    background-color: var(--darkBtnPrimaryLowOpacity);
  }
}
.bgTitle {
  border-color: var(--darkColorNavOne);
  background-color: var(--darkColorNavBase);
}
.invertText {
  color: var(--lightColorBase);
  &:where(.dark, .dark *) {
    color: var(--darkColorBase);
  }
}
.textSuccess {
  color: var(--color-green-500);
}
.textWarning {
  color: var(--color-yellow-500);
}
.textDanger {
  color: var(--color-red-500);
}
.noMargin {
  margin: calc(var(--spacing) * 0);
  padding: calc(var(--spacing) * 0);
}
.primaryContainer {
  margin: auto;
  min-height: 100%;
  width: 100%;
  max-width: 840px;
  padding: calc(var(--spacing) * 6);
}
.fullContainer {
  min-height: 100%;
  max-width: 100%;
  min-width: 100%;
  padding: calc(var(--spacing) * 6);
}
.center {
  margin-right: auto;
  margin-left: auto;
  display: block !important;
  width: fit-content;
}
.centerItems {
  display: flex;
  align-items: center;
  justify-content: center;
}
.tContainer {
  min-width: 100%;
  :where(& > :not(:last-child)) {
    --tw-divide-y-reverse: 0;
    border-bottom-style: var(--tw-border-style);
    border-top-style: var(--tw-border-style);
    border-top-width: calc(1px * var(--tw-divide-y-reverse));
    border-bottom-width: calc(1px * calc(1 - var(--tw-divide-y-reverse)));
  }
  :where(& > :not(:last-child)) {
    border-color: var(--color-neutral-200);
  }
  text-align: center;
}
.tHead {
  background-color: color-mix(in oklab, var(--color-neutral-800) 50%, transparent);
  text-align: center;
  text-transform: uppercase;
}
.tBody {
  :where(& > :not(:last-child)) {
    --tw-divide-y-reverse: 0;
    border-bottom-style: var(--tw-border-style);
    border-top-style: var(--tw-border-style);
    border-top-width: calc(1px * var(--tw-divide-y-reverse));
    border-bottom-width: calc(1px * calc(1 - var(--tw-divide-y-reverse)));
  }
  :where(& > :not(:last-child)) {
    border-color: var(--color-neutral-200);
  }
  background-color: var(--color-neutral-800);
}
.hRow {
  padding-inline: calc(var(--spacing) * 6);
  padding-block: calc(var(--spacing) * 3);
  text-align: center;
  --tw-font-weight: var(--font-weight-medium);
  font-weight: var(--font-weight-medium);
  --tw-tracking: var(--tracking-wider);
  letter-spacing: var(--tracking-wider);
}
.dataless {
  padding-inline: calc(var(--spacing) * 6);
  padding-block: calc(var(--spacing) * 4);
  text-align: center;
  color: var(--color-white);
}
.tRow {
  border-bottom-style: var(--tw-border-style);
  border-bottom-width: 1px;
  border-color: var(--color-neutral-600);
  &:hover {
    @media (hover: hover) {
      background-color: var(--color-neutral-700);
    }
  }
}
.tContent {
  padding-inline: calc(var(--spacing) * 6);
  padding-block: calc(var(--spacing) * 4);
  text-align: center;
}
.titleContainer {
  margin-bottom: calc(var(--spacing) * 6);
  display: flex;
  height: calc(var(--spacing) * 10);
  flex-direction: row;
  align-items: center;
  justify-content: space-between;
  vertical-align: middle;
}
.btnSize {
  max-width: calc(var(--spacing) * 0);
  opacity: 0%;
}
.endButtonsContainer {
  margin-top: calc(var(--spacing) * 5);
  margin-bottom: calc(var(--spacing) * 0);
  display: flex;
  justify-content: center;
  gap: calc(var(--spacing) * 3);
}
.posSearch {
  position: absolute;
  top: 27px;
  left: -18px;
  height: calc(var(--spacing) * 6);
  width: calc(var(--spacing) * 6);
  color: var(--color-white);
}
.btnPrimary {
  display: inline-block;
  cursor: pointer;
  border-radius: var(--radius-md);
  background-color: var(--lightBtnPrimary);
  padding-inline: calc(var(--spacing) * 6);
  padding-block: calc(var(--spacing) * 2);
  color: var(--darkColorBase);
  &:hover {
    @media (hover: hover) {
      background-color: color-mix(in oklab, var(--lightBtnPrimary) 80%, transparent);
    }
  }
  &:where(.dark, .dark *) {
    background-color: var(--darkBtnPrimary);
  }
  &:where(.dark, .dark *) {
    color: var(--lightColorBase);
  }
  &:where(.dark, .dark *) {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in oklab, var(--darkBtnPrimary) 50%, transparent);
      }
    }
  }
}
.btnSuccess {
  display: inline-block;
  cursor: pointer;
  border-radius: var(--radius-md);
  background-color: var(--lightBtnSuccess);
  padding-inline: calc(var(--spacing) * 6);
  padding-block: calc(var(--spacing) * 2);
  color: var(--darkColorBase);
  &:hover {
    @media (hover: hover) {
      background-color: color-mix(in oklab, var(--lightBtnSuccess) 80%, transparent);
    }
  }
  &:where(.dark, .dark *) {
    background-color: var(--darkBtnSuccess);
  }
  &:where(.dark, .dark *) {
    color: var(--lightColorBase);
  }
  &:where(.dark, .dark *) {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in oklab, var(--darkBtnSuccess) 50%, transparent);
      }
    }
  }
}
.btnDanger {
  display: inline-block;
  cursor: pointer;
  border-radius: var(--radius-md);
  background-color: var(--lightBtnDanger);
  padding-inline: calc(var(--spacing) * 6);
  padding-block: calc(var(--spacing) * 2);
  color: var(--darkColorBase);
  &:hover {
    @media (hover: hover) {
      background-color: color-mix(in oklab, var(--lightBtnDanger) 80%, transparent);
    }
  }
  &:where(.dark, .dark *) {
    background-color: var(--darkBtnDanger);
  }
  &:where(.dark, .dark *) {
    color: var(--lightColorBase);
  }
  &:where(.dark, .dark *) {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in oklab, var(--darkBtnDanger) 50%, transparent);
      }
    }
  }
}
.btnMeasure {
  display: inline-block;
  cursor: pointer;
  border-radius: var(--radius-md);
  border-style: var(--tw-border-style);
  border-width: 1px;
  border-color: var(--lightBtnPrimary);
  padding-inline: calc(var(--spacing) * 6);
  padding-block: calc(var(--spacing) * 2);
  &:where(.dark, .dark *) {
    border-color: var(--darkBtnPrimary);
  }
}
.btnHeader {
  position: absolute;
  display: flex !important;
  height: calc(var(--spacing) * 8);
  width: calc(var(--spacing) * 8);
  cursor: pointer;
  border-radius: calc(infinity * 1px) !important;
  border-style: var(--tw-border-style);
  border-width: 1px;
  padding: calc(var(--spacing) * 0) !important;
}
.status {
  position: fixed;
  top: calc(var(--spacing) * 0);
  left: calc(var(--spacing) * 0);
  z-index: 20;
  margin: calc(var(--spacing) * 0);
  height: calc(var(--spacing) * 0);
  width: calc(100% - 60px);
  overflow: hidden;
  border-radius: var(--radius-lg);
  padding-bottom: calc(var(--spacing) * 0);
  text-wrap: nowrap;
}
.statusText {
  overflow: hidden;
  padding-left: calc(var(--spacing) * 3);
}
.statusBarContainer {
  height: fit-content;
  overflow: hidden;
  padding-top: calc(var(--spacing) * 3);
}
.statusBar {
  display: block;
  height: calc(var(--spacing) * 1);
  width: 100%;
}
.sweetAlerts {
  border-radius: var(--radius-md);
  border-style: var(--tw-border-style);
  border-width: 1px;
  font-family: Gotham;
  --tw-font-weight: var(--font-weight-normal);
  font-weight: var(--font-weight-normal);
}
.swal2-container {
  background-color: color-mix(in oklab, var(--color-neutral-950) 90%, transparent) !important;
}
.sweetAlerts.normal {
  border-color: var(--darkColorNavOne);
  background-color: var(--darkColorNavBase);
  color: var(--lightColorBase);
}
.sweetAlerts.alert {
  border-color: var(--color-red-700);
  background-color: var(--color-red-950);
  color: var(--color-red-200);
}
.sweetAlerts .swal2-confirm {
  display: inline-block;
  cursor: pointer;
  border-radius: var(--radius-md);
  padding-inline: calc(var(--spacing) * 6);
  padding-block: calc(var(--spacing) * 2);
  --tw-font-weight: var(--font-weight-normal) !important;
  font-weight: var(--font-weight-normal) !important;
}
.sweetAlerts.normal .swal2-confirm {
  display: inline-block;
  cursor: pointer;
  border-radius: var(--radius-md);
  background-color: var(--darkBtnPrimary);
  padding-inline: calc(var(--spacing) * 6);
  padding-block: calc(var(--spacing) * 2);
  --tw-font-weight: var(--font-weight-normal) !important;
  font-weight: var(--font-weight-normal) !important;
  color: var(--lightColorBase);
  &:hover {
    @media (hover: hover) {
      background-color: color-mix(in oklab, var(--darkBtnPrimary) 50%, transparent);
    }
  }
}
.sweetAlerts .swal2-cancel, .sweetAlerts.alert .swal2-confirm {
  display: inline-block;
  cursor: pointer;
  border-radius: var(--radius-md);
  background-color: var(--darkBtnDanger);
  padding-inline: calc(var(--spacing) * 6);
  padding-block: calc(var(--spacing) * 2);
  --tw-font-weight: var(--font-weight-normal) !important;
  font-weight: var(--font-weight-normal) !important;
  color: var(--lightColorBase);
  &:hover {
    @media (hover: hover) {
      background-color: color-mix(in oklab, var(--darkBtnDanger) 50%, transparent);
    }
  }
}
::-webkit-scrollbar {
  width: 3px;
}
::-webkit-scrollbar-thumb {
  background-color: #888;
  border-radius: 10px;
}
::-webkit-scrollbar-thumb:hover {
  background-color: #555;
}
::-webkit-scrollbar-track {
  background: transparent;
}
.input {
  margin-bottom: calc(var(--spacing) * 5);
  width: 100%;
  border-radius: var(--radius-md);
  border-style: var(--tw-border-style);
  border-width: 1px;
  padding-inline: calc(var(--spacing) * 4);
  padding-block: calc(var(--spacing) * 2);
  &:where(.dark, .dark *) {
    border-color: color-mix(in oklab, var(--color-neutral-600) 50%, transparent);
  }
  &:where(.dark, .dark *) {
    background-color: color-mix(in oklab, var(--color-neutral-700) 50%, transparent);
  }
}
.label {
  margin-bottom: calc(var(--spacing) * 0);
  display: block;
  --tw-font-weight: var(--font-weight-semibold);
  font-weight: var(--font-weight-semibold);
}
.navItem {
  display: flex;
  flex-direction: row;
  justify-content: center;
  overflow: hidden;
  text-wrap: nowrap;
}
@page {
  size: A4 landscape;
  margin: 0.5cm 0.5cm 2cm 2cm;
}
@media print {
  #navBar, .bgNav, .bgNavTwo, .bgNavHead, .toggleText, #navItem, .btnPrimary, #btnContainer {
    display: none !important;
  }
  .pageBreak {
    break-after: page;
    page-break-after: always !important;
  }
  .avoidBreak {
    break-inside: avoid-page;
    page-break-inside: avoid !important;
  }
  table {
    break-inside: auto;
    page-break-inside: auto !important;
  }
  tr {
    break-inside: avoid-page;
    page-break-inside: avoid !important;
  }
  html, body, .container, .report-container {
    height: auto !important;
    max-height: none !important;
    overflow: visible !important;
  }
}
@property --tw-scale-x {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-y {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-z {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-space-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-space-x-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow {
  syntax: "*";
  inherits: false;
}
@property --tw-divide-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-tracking {
  syntax: "*";
  inherits: false;
}
