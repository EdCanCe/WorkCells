<div class="flex-1 p-6">
    <div class="max-w-7xl mx-auto">
        <div class="bg-neutral-700/25 shadow-lg rounded-lg">
            <div class="p-6">
                <h2 class="text-2xl font-semibold mb-4">
                    All requests
                </h2>
            </div>
            <div class="p-6">
                <div class="overflow-x-auto bg-neutral-700/25 p-4 rounded-lg shadow">
                    <% if (vacations.length === 0) { %>
                    <div class="no-requests-container p-6 bg-neutral-800 rounded-lg shadow-lg">
                        <p class="text-center text-gray-400 text-xl">No previous requests done</p>
                    </div>
                    <% } else { %>
                    <table id="vacations-table" class="min-w-full table-auto">
                        <thead class="bg-neutral-800">
                            <tr>
                                <th class="px-4 py-2 text-left">Full name</th>
                                <th class="px-4 py-2 text-left">Reason</th>
                                <th class="px-4 py-2 text-left">Start date</th>
                                <th class="px-4 py-2 text-left">End date</th>
                                <th class="px-4 py-2 text-left">Duration</th>
                                <th class="px-4 py-2 text-center">Status</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% vacations.forEach(vacation => { %>
                            <tr class="border-b hover:bg-neutral-800">
                                <td class="px-4 py-2"><%= vacation.birthName + " " + vacation.surname %></td>
                                <td class="px-4 py-2"><%= vacation.reason %></td>
                                <td class="px-4 py-2"><%= new Date(vacation.startDate).toLocaleDateString('es-MX') %></td>
                                <td class="px-4 py-2"><%= new Date(vacation.endDate).toLocaleDateString('es-MX') %></td>
                                <td class="px-4 py-2 total-days" data-start-date="<%= vacation.startDate %>" data-end-date="<%= vacation.endDate %>"></td>
                                <% if (role === "Department Leader") { %>
                                <td class="px-4 py-2 text-center">
                                    <% if (vacation.leaderStatus === 1) { %>
                                        <div class="text-green-500 text-center font-semibold">Aprobado</div>
                                    <% } else if (vacation.leaderStatus === 0) { %>
                                        <div class="text-red-500 text-center font-semibold">Denegado</div>
                                    <% } %>
                                </td>
                                <% } else if (role === "Human Resources") { %>
                                <td class="px-4 py-2 text-center">
                                    <% if (vacation.hrStatus === 1) { %>
                                        <div class="text-green-500 text-center font-semibold">Aprobado</div>
                                    <% } else if (vacation.hrStatus === 0) { %>
                                        <div class="text-red-500 text-center font-semibold">Denegado</div>
                                    <% } %>
                                </td>
                                <% } %>
                            </tr>
                            <% }) %>
                        </tbody>
                    </table>
                    <% } %>
                </div>
            </div>
        </div>
        <div class="pagination-controls mt-4 mb-4 flex justify-between">
            <button id="prev-button" class="btnPrimary" <%= vacations.length === 0 ? 'disabled' : '' %>>Previous</button>
            <button id="next-button" class="btnPrimary" <%= vacations.length === 0 ? 'disabled' : '' %>>Next</button>
        </div>
        <a href="/vacation/requests" class="btnPrimary">Back</a>
    </div>
</div>

<script>
    let currentPage = 0;
    const limit = 10;
    let isLoading = false;
    const role = "<%= role %>";

    // Calcula el total de días entre dos fechas
    function calculateTotalDays(startDate, endDate) {
        const start = new Date(startDate);
        const end = new Date(endDate);
        return Math.ceil((end - start) / (1000 * 3600 * 24)) + 1;
    }

    function updateTable(data) {
        const tableContainer = document.querySelector(".overflow-x-auto");
    
        // Check if data is empty first
        if (!data || data.length === 0) {
            // Replace table with "no requests" message
            tableContainer.innerHTML = `
                <div class="no-requests-container p-6 bg-neutral-800 rounded-lg shadow-lg">
                    <p class="text-center text-gray-400 text-xl">No hay solicitudes de vacaciones disponibles.</p>
                </div>`;
            
            // Disable pagination buttons
            document.getElementById("prev-button").disabled = currentPage === 0;
            document.getElementById("next-button").disabled = true;
            return;
        }
        
        // If we have data, make sure we have a table
        if (!document.getElementById("vacations-table")) {
            let headerHTML = `
                <table id="vacations-table" class="min-w-full table-auto">
                    <thead class="bg-neutral-800">
                        <tr>
                            <th class="px-4 py-2 text-left">Nombre completo</th>
                            <th class="px-4 py-2 text-left">Motivo</th>
                            <th class="px-4 py-2 text-left">Fecha Inicio</th>
                            <th class="px-4 py-2 text-left">Fecha Fin</th>
                            <th class="px-4 py-2 text-left">Duración</th>`;
            
            if (role === "Department Leader") {
                headerHTML += `<th class="px-4 py-2 text-center">Estado del Líder</th>`;
            } else if (role === "Human Resources") {
                headerHTML += `<th class="px-4 py-2 text-center">Estado de RRHH</th>`;
            }
            
            headerHTML += `</tr>
                    </thead>
                    <tbody></tbody>
                </table>`;
                
            tableContainer.innerHTML = headerHTML;
        }
        
        const table = document.getElementById("vacations-table");
        const tbody = table.querySelector("tbody");
        tbody.innerHTML = "";
        
        // Si hay datos, mostrarlos en la tabla
        data.forEach((vac) => {
            const totalDays = calculateTotalDays(vac.startDate, vac.endDate);
            
            let statusCell = "";
            if (role === "Department Leader") {
                if (vac.leaderStatus === 1) {
                    statusCell = `<div class="text-green-500 text-center font-semibold">Aprobado</div>`;
                } else if (vac.leaderStatus === 0) {
                    statusCell = `<div class="text-red-500 text-center font-semibold">Denegado</div>`;
                } else {
                    statusCell = `<div class="text-yellow-500 text-center font-semibold">Pendiente</div>`;
                }
            } else if (role === "Human Resources") {
                if (vac.hrStatus === 1) {
                    statusCell = `<div class="text-green-500 text-center font-semibold">Aprobado</div>`;
                } else if (vac.hrStatus === 0) {
                    statusCell = `<div class="text-red-500 text-center font-semibold">Denegado</div>`;
                } else {
                    statusCell = `<div class="text-yellow-500 text-center font-semibold">Pendiente</div>`;
                }
            }

            const row = document.createElement("tr");
            row.className = "border-b hover:bg-neutral-800";
            
            let rowHTML = `
                <td class="px-4 py-2">${vac.birthName} ${vac.surname}</td>
                <td class="px-4 py-2">${vac.reason}</td>
                <td class="px-4 py-2">${new Date(vac.startDate).toLocaleDateString("es-MX")}</td>
                <td class="px-4 py-2">${new Date(vac.endDate).toLocaleDateString("es-MX")}</td>
                <td class="px-4 py-2">${totalDays}</td>`;
                
            if (role === "Department Leader" || role === "Human Resources") {
                rowHTML += `<td class="px-4 py-2 text-center">${statusCell}</td>`;
            }
            
            row.innerHTML = rowHTML;
            tbody.appendChild(row);
        });
        
        // Actualizar estado de botones de paginación
        document.getElementById("prev-button").disabled = currentPage === 0;
        document.getElementById("next-button").disabled = data.length < limit;
    }

    async function loadPage(page) {
    if (isLoading) return;
    isLoading = true;
    
    try {
        // We need to include 'all=true' for both HR and Department Leader when viewing historical requests
        const endpoint = `/vacation/requests/paginated?page=${page}&all=true`;
            
        const response = await fetch(endpoint);
        if (!response.ok) {
            const errorData = await response.json();
            throw new Error(errorData.message || "Error en la respuesta del servidor");
        }           
        const data = await response.json();
        currentPage = page;
        updateTable(data);
    } catch (error) {
        console.error("Error en loadPage:", error);
        alert("Error al cargar las solicitudes. Por favor, intente nuevamente.");
    } finally {
        isLoading = false;
    }
}

    // Manejadores para los botones de paginación
    document.getElementById("next-button").addEventListener("click", async () => {
        if (!document.getElementById("next-button").disabled) {
            await loadPage(currentPage + 1);
        }
    });
    
    document.getElementById("prev-button").addEventListener("click", async () => {
        if (currentPage > 0 && !document.getElementById("prev-button").disabled) {
            await loadPage(currentPage - 1);
        }
    });

    // Inicialización al cargar la página
    document.addEventListener("DOMContentLoaded", function() {
        loadPage(0);
        
        // Inicializar los totales de días para los elementos que ya están en el DOM
        document.querySelectorAll(".total-days").forEach(cell => {
            const startDate = cell.dataset.startDate;
            const endDate = cell.dataset.endDate;
            cell.textContent = calculateTotalDays(startDate, endDate);
        });
    });
</script>