<div class="flex-1 p-6">
    <div class="max-w-7xl mx-auto">
        <div class="bg-white shadow-lg rounded-lg">
            <div class="p-6">
                <h2 class="text-2xl font-semibold mb-4">Solicitudes de Ausencias</h2>
            </div>
            <div class="p-6">
                <div class="overflow-x-auto bg-gray-100 p-4 rounded-lg shadow">
                    <table class="min-w-full table-auto" id="absences-table">
                        <thead class="bg-gray-200">
                            <tr>
                                <th class="px-4 py-2 text-left">Full name</th>
                                <th class="px-4 py-2 text-left">Role</th>
                                <th class="px-4 py-2 text-left">Start date</th>
                                <th class="px-4 py-2 text-left">End date</th>
                                <th class="px-4 py-2 text-left">Total days</th>
                                <th class="px-4 py-2 text-left">Reason</th>
                                <th class="px-4 py-2 text-center">Status</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% for (let ab of absences) { %>
                            <tr class="border-b hover:bg-gray-50">
                                <td class="px-4 py-2"><%= ab.birthName + ' ' + ab.surname %></td>
                                <td class="px-4 py-2"><%= ab.title %></td>
                                <td class="px-4 py-2">
                                    <%= new Date(ab.startDate).toLocaleDateString('es-MX') %>
                                </td>
                                <td class="px-4 py-2">
                                    <%= new Date(ab.endDate).toLocaleDateString('es-MX') %>
                                </td>
                                <td class="px-4 py-2 total-days" 
                                    data-start-date="<%= ab.startDate %>"
                                    data-end-date="<%= ab.endDate %>">
                                </td>
                                <td class="px-4 py-2"><%= ab.reason %></td>
                                <td class="px-4 py-2">
                                    <% if (ab.justified === 0) { %>
                                        <span class="text-red-600 font-semibold flex items-center justify-center">Denied</span>
                                    <% } else if (ab.justified === 1) { %>
                                        <span class="text-green-600 font-semibold flex items-center justify-center">Approved</span>
                                    <% } else if (ab.justified === 2) { %>
                                        <div class="flex flex-col sm:flex-row sm:items-center sm:gap-4 justify-center">
                                            <button
                                                class="approve-btn bg-green-500 hover:bg-green-600 text-white font-semibold py-2 px-4 rounded"
                                                data-url="/absence/requests/approve/<%= ab.absenceID %>"
                                                data-csrf="<%= csrfToken %>"
                                            >
                                                Approve
                                            </button>
                                            <button
                                                class="deny-btn bg-red-500 hover:bg-red-600 text-white font-semibold py-2 px-4 rounded"
                                                data-url="/absence/requests/deny/<%= ab.absenceID %>"
                                                data-csrf="<%= csrfToken %>"
                                            >
                                                Deny
                                            </button>
                                        </div>
                                    <% } %>
                                </td>
                            </tr>
                            <% } %>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
        <a
            href="/absence"
            class="inline-block mt-6 px-6 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600"
            >Regresar</a
        >
    </div>
</div>

<script>
    // Calcular los días para cada fila una vez que la página se ha cargado
    document.addEventListener("DOMContentLoaded", function () {
        const rows = document.querySelectorAll("#absences-table tbody tr");
        rows.forEach((row) => {
            const totalDaysCell = row.querySelector(".total-days");
            if (totalDaysCell) {
                const startDate = new Date(totalDaysCell.getAttribute("data-start-date"));
                const endDate = new Date(totalDaysCell.getAttribute("data-end-date"));
                
                // Ajustar las fechas para incluir el día inicial y final
                const timeDifference = endDate - startDate;
                const totalDays = Math.ceil(timeDifference / (1000 * 3600 * 24)) + 1;
                
                // Asignar el total de días a la celda correspondiente
                totalDaysCell.innerText = totalDays;
            }
        });
    });

    // Agregar event listener a todos los botones de "Approve"
    document.querySelectorAll(".approve-btn").forEach((button) => {
        button.addEventListener("click", async function (event) {
            const url = this.dataset.url;
            const csrf = this.dataset.csrf;
            
            // Deshabilitar el botón y mostrar estado de carga
            this.disabled = true;
            const originalText = this.innerText;
            this.innerText = "Processing...";

            try {
                const response = await fetch(url, {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                        "csrf-token": csrf,
                    },
                    body: JSON.stringify({}),
                });

                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }

                const data = await response.json();
                
                // Obtener la celda de la tabla que contiene los botones
                const tableCell = this.closest('td');
                // Reemplazar el contenido con el nuevo estado
                tableCell.innerHTML = '<span class="text-green-600 font-semibold">Approved</span>';
            } catch (err) {
                console.error("Error al aprobar:", err);
                // Restaurar el estado del botón en caso de error
                this.disabled = false;
                this.innerText = originalText;
                alert("Hubo un error al procesar la solicitud. Por favor, intente nuevamente.");
            }
        });
    });

    // Agregar event listener a todos los botones de "Deny"
    document.querySelectorAll(".deny-btn").forEach((button) => {
        button.addEventListener("click", async function (event) {
            const url = this.dataset.url;
            const csrf = this.dataset.csrf;
            
            // Deshabilitar el botón y mostrar estado de carga
            this.disabled = true;
            const originalText = this.innerText;
            this.innerText = "Processing...";

            try {
                const response = await fetch(url, {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                        "csrf-token": csrf,
                    },
                    body: JSON.stringify({}),
                });

                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }

                const data = await response.json();
                
                // Obtener la celda de la tabla que contiene los botones
                const tableCell = this.closest('td');
                // Reemplazar el contenido con el nuevo estado
                tableCell.innerHTML = '<span class="text-red-600 font-semibold">Denied</span>';
            } catch (err) {
                console.error("Error denying:", err);
                // Restaurar el estado del botón en caso de error
                this.disabled = false;
                this.innerText = originalText;
                alert("Hubo un error al procesar la solicitud. Por favor, intente nuevamente.");
            }
        });
    });
</script>