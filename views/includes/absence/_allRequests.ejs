<script>addBackButton(document.referrer);</script>
<div class="fullContainer bgContainer1">
    <div>
        
        <div class="titleContainer">
            <h2 class="title">All absence requests</h2>
            <div class="flex gap-1 centerItems">
            </div>
        </div>

        <div>
            <div class="overflow-x-auto  p-4 rounded-lg shadow">
                <% if (absences.length === 0) { %>
                <div class="no-requests-container p-6 rounded-lg shadow-lg">
                    <p class="text-center text-gray-400 text-xl">No previous requests done</p>
                </div>
                <% } else { %>
                <table id="absences-table" class="tContainer">
                    <thead class="tHead">
                        <tr>
                            <th class="hRow">Full name</th>
                            <th class="hRow">Reason</th>
                            <th class="hRow">Start date</th>
                            <th class="hRow">End date</th>
                            <th class="hRow">Duration</th>
                            <th class="hRow">Status</th>
                        </tr>
                    </thead>
                    <tbody class="tBody">
                        <% absences.forEach(absence => { %>
                        <tr class="tRow">
                            <td class="tContent"><%= absence.birthName + " " + absence.surname %></td>
                            <td class="tContent"><%= absence.reason %></td>
                            <td class="tContent"><%= new Date(absence.startDate).toLocaleDateString('es-MX') %></td>
                            <td class="tContent"><%= new Date(absence.endDate).toLocaleDateString('es-MX') %></td>
                            <td class="tContent total-days" data-start-date="<%= absence.startDate %>" data-end-date="<%= absence.endDate %>"></td>
                            <% if (role === "Department Leader") { %>
                            <td class="tContent text-center">
                                <% if (absence.leaderStatus === 1) { %>
                                    <div class="textSuccess text-center font-semibold">Approved</div>
                                <% } else if (absence.leaderStatus === 0) { %>
                                    <div class="textDanger text-center font-semibold">Denied</div>
                                <% } %>
                            </td>
                            <% } else if (role === "Manager") { %>
                            <td class="tContent">
                                <% if (absence.hrStatus === 1) { %>
                                    <div class="textSuccess text-center font-semibold">Approved</div>
                                <% } else if (absence.hrStatus === 0) { %>
                                    <div class="textDanger text-center font-semibold">Denied</div>
                                <% } %>
                            </td>
                            <% } %>
                        </tr>
                        <% }) %>
                    </tbody>
                </table>
                <% } %>
            </div>
        </div>
    </div>
    <div class="endButtonsContainer">
        <button id="prev-button" class="btnPrimary" <%= absences.length === 0 ? 'disabled' : '' %>>Previous</button>
        <button id="next-button" class="btnPrimary" <%= absences.length === 0 ? 'disabled' : '' %>>Next</button>
    </div>
</div>

<script>
    let currentPage = 0;
    const limit = 10;
    let isLoading = false;
    const role = "<%= role %>";

    // Calcula el total de días entre dos fechas
    function calculateTotalDays(startDate, endDate) {
        const start = new Date(startDate);
        const end = new Date(endDate);
        return Math.ceil((end - start) / (1000 * 3600 * 24)) + 1;
    }

    function updateTable(data) {
        const tableContainer = document.querySelector(".overflow-x-auto");
    
        // Check if data is empty first
        if (!data || data.length === 0) {
            // Replace table with "no requests" message
            tableContainer.innerHTML = `
                <div class="no-requests-container p-6 bg-neutral-800 rounded-lg shadow-lg">
                    <p class="text-center text-gray-400 text-xl">No previous requests done.</p>
                </div>`;
            
            // Disable pagination buttons
            document.getElementById("prev-button").disabled = currentPage === 0;
            document.getElementById("next-button").disabled = true;
            return;
        }
        
        // If we have data, make sure we have a table
        if (!document.getElementById("absences-table")) {
            let headerHTML = `
                <table id="absences-table" class="tContent">
                    <thead class="tHead">
                        <tr>
                            <th class="hRow">Full name</th>
                            <th class="hRow">Reason</th>
                            <th class="hRow">Start date</th>
                            <th class="hRow">End date</th>
                            <th class="hRow">Duration</th>
                            <th class="hRow">Status</th>
                        </tr>
                    </thead>
                    <tbody class="tBody"></tbody>
                </table>`;
                
            tableContainer.innerHTML = headerHTML;
        }
        
        const table = document.getElementById("absences-table");
        const tbody = table.querySelector("tbody");
        tbody.innerHTML = "";
        
        // Si hay datos, mostrarlos en la tabla
        data.forEach((absence) => {
            const totalDays = calculateTotalDays(absence.startDate, absence.endDate);
            
            let statusCell = "";
            if (role === "Department Leader") {
                if (absence.leaderStatus === 1) {
                    statusCell = `<div class="textSuccess text-center font-semibold">Approved</div>`;
                } else if (absence.leaderStatus === 0) {
                    statusCell = `<div class="textDanger text-center font-semibold">Denied</div>`;
                } else {
                    statusCell = `<div class="textWarning text-center font-semibold">Pending...</div>`;
                }
            } else if (role === "Manager") {
                if (absence.hrStatus === 1) {
                    statusCell = `<div class="textSuccess text-center font-semibold">Approved</div>`;
                } else if (absence.hrStatus === 0) {
                    statusCell = `<div class="textDanger text-center font-semibold">Denied</div>`;
                } else {
                    statusCell = `<div class="textWarning text-center font-semibold">Pending...</div>`;
                }
            }

            const row = document.createElement("tr");
            row.className = "tRow";
            
            let rowHTML = `
            <tr class="tRow">
                <td class="tContent">${absence.birthName} ${absence.surname}</td>
                <td class="tContent">${absence.reason}</td>
                <td class="tContent">${new Date(absence.startDate).toLocaleDateString("es-MX")}</td>
                <td class="tContent">${new Date(absence.endDate).toLocaleDateString("es-MX")}</td>
                <td class="tContent">${totalDays}</td>
            </tr>`;
                
            if (role === "Department Leader" || role === "Manager") {
                rowHTML += `<td class="tContent">${statusCell}</td>`;
            }
            
            row.innerHTML = rowHTML;
            tbody.appendChild(row);
        });
        
        // Actualizar estado de botones de paginación
        document.getElementById("prev-button").disabled = currentPage === 0;
        document.getElementById("next-button").disabled = data.length < limit;
    }

    async function loadPage(page) {
    if (isLoading) return;
    isLoading = true;
    
    try {
        // We need to include 'all=true' for both HR and Department Leader when viewing historical requests
        const endpoint = `/absence/requests/paginated?page=${page}&all=true`;
            
        const response = await fetch(endpoint);
        if (!response.ok) {
            const errorData = await response.json();
            throw new Error(errorData.message || "There was an error on the server");
        }           
        const data = await response.json();
        currentPage = page;
        updateTable(data);
    } catch (error) {
        console.error("Error en loadPage:", error);
        alert("There was an error loading the requests. Por favor, intente nuevamente.");
    } finally {
        isLoading = false;
    }
}

    // Manejadores para los botones de paginación
    document.getElementById("next-button").addEventListener("click", async () => {
        if (!document.getElementById("next-button").disabled) {
            await loadPage(currentPage + 1);
        }
    });
    
    document.getElementById("prev-button").addEventListener("click", async () => {
        if (currentPage > 0 && !document.getElementById("prev-button").disabled) {
            await loadPage(currentPage - 1);
        }
    });

    // Inicialización al cargar la página
    document.addEventListener("DOMContentLoaded", function() {
        loadPage(0);
        
        // Inicializar los totales de días para los elementos que ya están en el DOM
        document.querySelectorAll(".total-days").forEach(cell => {
            const startDate = cell.dataset.startDate;
            const endDate = cell.dataset.endDate;
            cell.textContent = calculateTotalDays(startDate, endDate);
        });
    });
</script>